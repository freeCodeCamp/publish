version: '3'
services:
  publish-backend-production:
    container_name: publish-backend-production
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: publish-backend-production:latest
    restart: unless-stopped
    environment:
      - HOST
      - PORT
      - APP_KEYS
      - API_TOKEN_SALT
      - ADMIN_JWT_SECRET
      - TRANSFER_TOKEN_SALT
      - JWT_SECRET
      - DATABASE_CLIENT
      - DATABASE_HOST=publish-backend-productionDB
      - DATABASE_PORT
      - DATABASE_NAME
      - DATABASE_USERNAME
      - DATABASE_PASSWORD
      - NODE_ENV
      - STRAPI_PLUGIN_I18N_INIT_LOCALE_CODE
      - SEED_DATA
      - DASHBOARD_URL
      - NODEMAILER_HOST=mailhog
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      # - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - publish-backend-production
    depends_on:
      - publish-backend-productionDB
      - mailhog

  publish-backend-productionDB:
    container_name: publish-backend-productionDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - publish-backend-production-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - '5432:5432'
    networks:
      - publish-backend-production

  mailhog:
    image: mailhog/mailhog
    container_name: "mailhog"
    platform: linux/amd64
    logging:
      driver: none
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - publish-backend-production

  publish-backend-productionAdminer:
    container_name: publish-backend-productionAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=publish-backend-productionDB
    networks:
      - publish-backend-production
    depends_on:
      - publish-backend-productionDB

volumes:
  publish-backend-production-data:

networks:
  publish-backend-production:
    name: Publish-backend-production
    driver: bridge
